@page "/"
@using Microsoft.JSInterop
@rendermode InteractiveAuto
@inject IJSRuntime JS
@using MudBlazor
@using MudBlazor.Services
@using System;
@using System.Text;
@inject IDialogService DialogService

<PageTitle>pageee</PageTitle>
<style>
    .custom-border {
        flex: 1 !important;
        display: flex;
        border: 1px solid black;
        border-radius: 4px;
    }

    .context-menu {
        position: absolute;
        background-color: #333; /* Темный фон */
        color: #fff; /* Белый текст */
        border: 1px solid #555; /* Темная граница */
        border-radius: 4px;
        box-shadow: 0 4px 8px rgba(0,0,0,0.3);
        font-size: 14px; /* Размер шрифта */
        z-index: 1000; /* Размещаем поверх других элементов */
        display: none; /* Скрыто по умолчанию */
    }

    /* Стиль для каждого элемента контекстного меню */
    .context-menu-item {
        display: block;
        padding: 10px 20px;
        cursor: pointer;
        text-align: center;
    }

    /* Изменяем фон и текст при наведении */
    .context-menu-item:hover {
        background-color: #555;
    }

    /* Стили для кнопок */
    .context-menu-item.MudButton {
        margin: 0;
        border: none;
        color: #fff;
        background-color: #444;
    }

    .context-menu-item.MudButton:hover {
        background-color: #666;
    }

</style>


<div style="display: flex;">
    <div style="flex: 1; flex-direction: column; height: 600px; overflow-y: auto; align-items: center; width: 80px; border: 1px solid grey; padding: 15px; margin-right:10px">
        <MudButton id="addRectBtn" Variant="Variant.Filled" Style="width: 100%; height: 60px;" Color="Color.Primary">Добавить прямоугольник</MudButton><br>
        <MudButton id="addCircleBtn" Variant="Variant.Filled" Style="width: 100%; height: 60px;" Color="Color.Secondary">Добавить круг</MudButton><br>
        <MudButton id="addLineBtn" Variant="Variant.Filled" Style="width: 100%; height: 60px;" Color="Color.Info">Добавить линию</MudButton><br>
        <MudButton id="addStarBtn" Variant="Variant.Filled" Style="width: 100%; height: 60px;" Color="Color.Info">Добавить звезду</MudButton><br>
        <MudButton id="addCloudBtn" Variant="Variant.Filled" Style="width: 100%; height: 60px;" Color="Color.Info">Добавить облако</MudButton><br>
        <MudButton id="delShapeBtn" Variant="Variant.Filled" Style="width: 100%; height: 60px;" Color="Color.Error">Удалить фигуру</MudButton><br>
        <MudButton id="rotateLeftBtn" Variant="Variant.Filled" Style="width: 100%; height: 60px;" Color="Color.Info">Повернуть влево</MudButton><br>
        <MudButton id="rotateRightBtn" Variant="Variant.Filled" Style="width: 100%; height: 60px;" Color="Color.Error">Повернуть вправо</MudButton><br>
        <MudButton id="connect_objects" Variant="Variant.Filled" Style="width: 50%; height: 60px;" Color="Color.Info">Неориентированная связь</MudButton>
        <MudButton id="remove_connection" Variant="Variant.Filled" Style="width: 49%; height: 60px;" Color="Color.Info">Удалить неор. соединение</MudButton><br>
        <MudButton id="outgoing_connect" Variant="Variant.Filled" Style="width: 50%; height: 60px;" Color="Color.Info">Ориентированная связь</MudButton>
        <MudButton id="remove_outgoing_connection" Variant="Variant.Filled" Style="width: 49%; height: 60px;" Color="Color.Info">Удалить ор. соединение</MudButton><br>
        <MudButton OnClick="ShowDialog" id="additionInfo" Variant="Variant.Filled" Style="width: 100%; height: 60px;" Color="Color.Info">Добавить описание</MudButton><br>
        <MudButton id="cycleCheck" Variant="Variant.Filled" Style="width: 100%; height: 60px;" Color="Color.Info">Проверить на циклы</MudButton><br>
        <MudButton id="longWayCheck" Variant="Variant.Filled" Style="width: 100%; height: 60px;" Color="Color.Info">Найти кратчайший путь</MudButton><br>
        

        @* Пробую загрузить диаграмму в виде OWL *@
        <MudButton id="downloadBtn3" Variant="Variant.Filled" Style="width: 100%; height: 60px;" Color="Color.Error">OWL скачивание</MudButton><br>
        <label for="fileInput3" class="custom-file-upload" style="display: block; width: 100%; margin-bottom: 10px;">
            Загрузить диаграмму в виде OWL
        </label>
        <input type="file" id="fileInput3" name="fileInput3" style="width: 100%; margin-bottom: 10px;"><br>

        @* Загрузка диаграммы в обычном виде *@
        <MudButton id="downloadBtn" Variant="Variant.Filled" Style="width: 100%; height: 60px;" Color="Color.Error">Скачать диаграмму</MudButton><br>
        <label for="fileInput" class="custom-file-upload" style="display: block; width: 100%; margin-bottom: 10px;">
            Загрузить диаграмму в обычном виде
        </label>
        <input type="file" id="fileInput" name="fileInput" style="width: 100%; margin-bottom: 10px;"><br>

        @* Пробую загрузить css через локальное хранилище *@
        <MudButton id="uploadCssBtn2" Variant="Variant.Filled" Color="Color.Primary" Style="width: 100%; height: 60px;">Загрузить еще CSS(лх)</MudButton><br>
        <label for="cssFileInput2" class="custom-file-upload" style="display: block; width: 100%; margin-bottom: 10px;">
            Загрузить файл css с (ЛХ)
        </label>
        <input type="file" id="cssFileInput2" accept=".css" style="width: 100%; margin-bottom: 10px;"><br>

        @* Пробую загрузить css через сервер *@
        <MudButton id="uploadCssBtn" Variant="Variant.Filled" Color="Color.Primary" Style="width: 100%; height: 60px;">Загрузить CSS</MudButton><br>
        <label for="cssFileInput2" class="custom-file-upload" style="display: block; width: 100%; margin-bottom: 10px;">
            Загрузить файл css
        </label>
        <input type="file" id="cssFileInput" accept=".css" style="width: 100%;"><br>
    </div>
     <div style="flex: 2;"> 
        <canvas id="canvas" width="698" height="598" style="border:1px solid grey"></canvas>
        <div id="contextMenu" class="context-menu" hidden>
            <MudButton id="deleteItem" class="context-menu-item" Variant="Variant.Filled" Style="width: 150px; height: 35px;" Color="Color.Primary">Удалить</MudButton>
            <MudButton id="rotateLeftItem" class="context-menu-item" Variant="Variant.Filled" Style="width: 150px; height: 35px;" Color="Color.Secondary">Поверн. влево</MudButton>
            <MudButton id="rotateRightItem" class="context-menu-item" Variant="Variant.Filled" Style="width: 150px; height: 35px;" Color="Color.Info">Поверн. вправо</MudButton>
            <MudButton id="connect_objects" class="context-menu-item" Variant="Variant.Filled" Style="width: 150px; height: 35px;" Color="Color.Info">Соед. фигуры</MudButton>
            <MudButton id="insert_img" class="context-menu-item" Variant="Variant.Filled" Style="width: 150px; height: 35px;" Color="Color.Info">Вставить изображение</MudButton>
            <input type="file" id="imageInput" style="display: none;">
        </div>
    </div>
    <div id="table-container"></div>
</div>

@code {
    private async Task ShowDialog()
    {
        try
        {
            // Вызов функции showPrompt из TypeScript
            var userInput_ = await JS.InvokeAsync<string>("addInfoclick", "Введите текст:");

            // Обработка пользовательского ввода
            Console.WriteLine($"User input: {userInput_}");
        }
        catch (Exception ex)
        {
            // Обработка случая, когда пользователь отменил диалог
            Console.WriteLine("Prompt was cancelled or an error occurred: " + ex.Message);
        }
    }
}

<h3>Debug Information</h3>
<textarea id="debugOutput" rows="10" cols="150" class="custom-border" readonly></textarea>

<h3>Cookies Management</h3>

<div>
    <label>Cookie Name: </label><br>
    <input @bind="cookieName" class="custom-border" />
</div>
<div>
    <label>Cookie Value: </label><br>
    <input @bind="cookieValue" class="custom-border" />
</div>
<div>
    <label>Days (optional): </label><br>
    <input type="number" @bind="days" class="custom-border" />
</div>
<div>
    <MudButton @onclick="SetCookie" Variant="Variant.Filled" Style="width: 100px; height: 60px;" Color="Color.Info">Set Cookie</MudButton>
    <MudButton @onclick="GetCookie" Variant="Variant.Filled" Style="width: 100px; height: 60px;" Color="Color.Error">Get Cookie</MudButton>
    <MudButton @onclick="EraseCookie" Variant="Variant.Filled" Style="width: 100px; height: 60px;" Color="Color.Error">Erase Cookie</MudButton><br>
</div>

<div>
    <p>Cookie Result: @cookieResult</p>
</div>

@code {
    private string cookieName = string.Empty;
    private string cookieValue = string.Empty;
    private int? days;
    private string cookieResult = string.Empty;

    private async Task SetCookie()
    {
        await JS.InvokeVoidAsync("cookiesInterop.setCookie", cookieName, cookieValue, days);
        cookieResult = $"Cookie {cookieName} set.";
    }

    private async Task GetCookie()
    {
        cookieResult = await JS.InvokeAsync<string>("cookiesInterop.getCookie", cookieName);
    }

    private async Task EraseCookie()
    {
        await JS.InvokeVoidAsync("cookiesInterop.eraseCookie", cookieName);
        cookieResult = $"Cookie {cookieName} erased.";
    }
}

<script src="js/CookiesServ.js"></script>
<script src="js/interface.js"></script>
<script src="js/file.js"></script>
<script src="js/file1.js"></script>
