@page "/"
@using Microsoft.JSInterop
@rendermode InteractiveAuto
@inject IJSRuntime JS
@using MudBlazor
@using MudBlazor.Services

<PageTitle>pageee</PageTitle>
<style>
    .custom-border {
        border: 1px solid black;
        border-radius: 4px;
    }
</style>


<div style="display: flex;">
    <div style="flex: 1; flex-direction: row;">
        <MudButton id="addRectBtn" Variant="Variant.Filled" Style="width: 150px; height: 60px;" Color="Color.Primary">Добавить прямоугольник</MudButton><br>
        <MudButton id="addCircleBtn" Variant="Variant.Filled" Style="width: 150px; height: 60px;" Color="Color.Secondary">Добавить круг</MudButton><br>
        <MudButton id="addLineBtn" Variant="Variant.Filled" Style="width: 150px; height: 60px;" Color="Color.Info">Добавить линию</MudButton><br>
        <MudButton id="delShapeBtn" Variant="Variant.Filled" Style="width: 150px; height: 60px;" Color="Color.Error">Удалить фигуру</MudButton><br>
        <MudButton id="rotateLeftBtn" Variant="Variant.Filled" Style="width: 150px; height: 60px;" Color="Color.Info">Повернуть вправо</MudButton><br>
        <MudButton id="rotateRightBtn" Variant="Variant.Filled" Style="width: 150px; height: 60px;" Color="Color.Error">Повернуть влево</MudButton><br>
        <MudButton id="downloadBtn" Variant="Variant.Filled" Style="width: 150px; height: 60px;" Color="Color.Error">Скачать диаграмму</MudButton><br>

        <label for="fileInput" class="custom-file-upload">
            Загрузить диаграмму
        </label><br>
        <input type="file" id="fileInput" name="fileInput"><br>

        <MudButton id="uploadCssBtn2" Variant="Variant.Filled" Color="Color.Primary">Загрузить еще CSS(лх)</MudButton><br>
        <input type="file" id="cssFileInput2" accept=".css"><br>

        <MudButton id="uploadCssBtn" Variant="Variant.Filled" Color="Color.Primary">Загрузить CSS</MudButton><br>
        <input type="file" id="cssFileInput" accept=".css"><br>
    </div>
    <div style="flex: 2;">
        <canvas id="canvas" width="700" height="500" style="border:1px solid grey"></canvas>
        <div id="contextMenu" class="context-menu" hidden>
            <MudButton id="deleteItem" class="context-menu-item" Variant="Variant.Filled" Style="width: 150px; height: 60px;" Color="Color.Primary">Delete</MudButton><br>
            <MudButton id="rotateLeftItem" class="context-menu-item" Variant="Variant.Filled" Style="width: 150px; height: 60px;" Color="Color.Secondary">Rotate Left</MudButton><br>
            <MudButton id="rotateRightItem" class="context-menu-item" Variant="Variant.Filled" Style="width: 150px; height: 60px;" Color="Color.Info">Rotate Right</MudButton><br>
            <MudButton id="connect_obj" class="context-menu-item" Variant="Variant.Filled" Style="width: 150px; height: 60px;" Color="Color.Info">Connect objects (connectionvsvsdv)</MudButton><br>
        </div>
    </div>
</div>

<h3>Debug Information</h3>
<textarea id="debugOutput" rows="10" cols="150" class="custom-border" readonly></textarea>

<h3>Cookies Management</h3>

<div>
    <label>Cookie Name: </label><br>
    <input @bind="cookieName" class="custom-border" />
</div>
<div>
    <label>Cookie Value: </label><br>
    <input @bind="cookieValue" class="custom-border" />
</div>
<div>
    <label>Days (optional): </label><br>
    <input type="number" @bind="days" class="custom-border" />
</div>
<div>
    <MudButton @onclick="SetCookie" Variant="Variant.Filled" Style="width: 100px; height: 60px;" Color="Color.Info">Set Cookie</MudButton>
    <MudButton @onclick="GetCookie" Variant="Variant.Filled" Style="width: 100px; height: 60px;" Color="Color.Error">Get Cookie</MudButton>
    <MudButton @onclick="EraseCookie" Variant="Variant.Filled" Style="width: 100px; height: 60px;" Color="Color.Error">Erase Cookie</MudButton><br>
</div>

<div>
    <p>Cookie Result: @cookieResult</p>
</div>

@code {
    private string cookieName;
    private string cookieValue;
    private int? days;
    private string cookieResult;

    private async Task SetCookie()
    {
        await JS.InvokeVoidAsync("cookiesInterop.setCookie", cookieName, cookieValue, days);
        cookieResult = $"Cookie {cookieName} set.";
    }

    private async Task GetCookie()
    {
        cookieResult = await JS.InvokeAsync<string>("cookiesInterop.getCookie", cookieName);
    }

    private async Task EraseCookie()
    {
        await JS.InvokeVoidAsync("cookiesInterop.eraseCookie", cookieName);
        cookieResult = $"Cookie {cookieName} erased.";
    }
}

<script src="js/CookiesServ.js"></script>
<script src="js/interface.js"></script>
<script src="js/file.js"></script>
